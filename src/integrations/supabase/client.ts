// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Get configuration from environment variables only (no production fallbacks)
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL as string;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY as string;

// Validate configuration
if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  console.error('[Supabase] Missing configuration: set VITE_SUPABASE_URL and VITE_SUPABASE_ANON_KEY.');
}

// Enhanced client configuration for development
const supabaseConfig = {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true,
    flowType: 'pkce' as const,
  },
  global: {
    headers: {
      'X-Client-Info': 'luminet-app',
    },
  },
  // Add timeout configuration if available
  ...(import.meta.env.VITE_API_TIMEOUT && {
    realtime: {
      timeout: parseInt(import.meta.env.VITE_API_TIMEOUT),
    },
  }),
};

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  supabaseConfig
);

// Development logging
if (import.meta.env.VITE_DEV_MODE === 'true') {
  console.log('Supabase client initialized:', {
    url: SUPABASE_URL,
    hasKey: !!SUPABASE_PUBLISHABLE_KEY,
    config: supabaseConfig,
  });
}
